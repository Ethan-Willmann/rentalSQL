/*
Ethan Willmann
1693457
November 19, 2024

This SQL file has queries that can be used to support operations and reporting needs.
Each comment has the task associated with the query, the query that needs to be written,
and the potential use for the specific query
*/

USE RentalWE57;

/*New Task #1 List all canoes that customer 1 has rented. List the customer's name with canoeID's. This can show
employees what canoes that customer 1 might prefer.*/

SELECT c.Fname, c.Lname, rl.canoeID
FROM Customer_T c INNER JOIN Rental_T r ON c.CustomerID = r.CustomerID
INNER JOIN RentalLine_T rl ON r.RentalID = rl.RentalID
WHERE c.CustomerID = 1;

/*New Task #2 List credit card number, experation date, and name on card used to pay for rental 3. 
This can be used by customer or employee to see details of the rental payment.*/

SELECT r.RentalID, p.CreditCardNo, p.NameOnCard, p.ExpDate
FROM Payment_T p INNER JOIN Rental_T r ON p.PaymentID = r.PaymentID
WHERE r.RentalID = 3;

/*New Task #3 List Customer names along with the canoes they have rented and when they were returned. This can be used
to lookup previous or current trips and what canoes were used along with what canoes are in use.*/

SELECT c.Fname, c.Lname, rl.canoeID, rl.ReturnDate
FROM Customer_T c INNER JOIN Rental_T r ON c.CustomerID = r.CustomerID
LEFT JOIN RentalLine_T rl ON r.RentalID = rl.RentalID;

/*New Task #4 List most popular canoe from most rented to least rented.*/

SELECT CanoeID, COUNT(CanoeID) as TimesRented
FROM RentalLine_T
GROUP BY CanoeID
ORDER BY COUNT(CanoeID)DESC;

/*New Task #5 List total revenue generated by all rentals in 2024 rounded to the nearest hundred dollars. Do not 
Include damages. This can be used by the company to get an estimate on how their business is going from year to year.*/
SELECT ROUND(SUM(RentalFee), -2) as TotalRevenue2024 /*This does not change with this data specifically because all sample data is already only in 100's*/
FROM RentalLine_T rl INNER JOIN Rental_T r ON rl.RentalID = r.RentalID
WHERE r.RentDate BETWEEN '2024-01-01' AND '2024-12-31';

/*Task #3 List rental fee of rental lines including canoe 3. This shows the expected price for renting canoe 3.*/

SELECT RentalFee as RentalFeeForCanoe3
FROM RentalLine_T
WHERE CanoeID = 3;


/*New Task #6 List the total revenue generated by each canoe. This would show the most profitable canoe.*/
SELECT CanoeID, SUM(RentalFee) as TotalRevenueGenerated
FROM RentalLine_T
GROUP BY CanoeID ORDER BY SUM(RentalFee) DESC;

/*Task #8 List deposit amount paid for by the card associated with rental 4.
 This can be used by an employee or customer to see their deposit amount and card used for the deposit.*/

SELECT p.CreditCardNo, r.RentalID, DepositAmt as DepositForRental
FROM Payment_T p INNER JOIN Rental_T r ON p.PaymentID = r.PaymentID
WHERE RentalID = 4;


/*New Task #7 List description for CanoeID 5. This can be used by employees to track the specs of certain canoes.*/

SELECT CanoeID, CanoeDescription
FROM Canoe_T
WHERE CanoeID = 5;


/*New Task #8 List Customers with the highest total damage fees. Include all Customers. This shows problematic customers*/
SELECT c.CustomerID, SUM(DamageCharge) AS TotalDamagesAmount
FROM Customer_T c LEFT JOIN Rental_T r  on c.CustomerID = r.CustomerID
LEFT JOIN RentalLine_T rl on r.RentalID = rl.RentalID
GROUP BY c.CustomerID ORDER BY SUM(DamageCharge) DESC;